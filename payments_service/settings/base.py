"""
Django settings for payments_service project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

import logging.handlers
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

SECRET_KEY = 'LOCAL_DEVELOPMENT'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'rest_framework',
    'payments_service.auth',
    'payments_service.base',
    'payments_service.braintree',
    'payments_service.status',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

SESSION_ENGINE = 'encrypted_cookies'

# Do not force secure cookies during development.
SESSION_COOKIE_SECURE = False

SESSION_COOKIE_HTTPONLY = True

SESSION_COOKIE_NAME = 'payservice_sess'

# Development-only keys:
ENCRYPTED_COOKIE_KEYS = ['LRwAWceOx89-jbxueXmBBfLDvbJg96RzZwZR0MGOJEE=']

COMPRESS_ENCRYPTED_COOKIE = True

ROOT_URLCONF = 'payments_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'payments_service.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

# This app does not use a database but declaring some settings seems to help
# out a few pesky things.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': ':memory:',
    }
}

# Only write emails to the console during development.
#
# You can set the email variables in your environment to send real email.
EMAIL_BACKEND = (os.environ.get('SERVICE_EMAIL_BACKEND') or
                 'django.core.mail.backends.console.EmailBackend')

EMAIL_HOST = os.environ.get('SERVICE_EMAIL_HOST', '')
EMAIL_HOST_USER = os.environ.get('SERVICE_EMAIL_HOST_USER', '')
EMAIL_HOST_PASSWORD = os.environ.get('SERVICE_EMAIL_HOST_PASSWORD', '')

# Not negotiable.
EMAIL_USE_TLS = True

# A list of regex's that we will allow emails too. If empty then
# emails will be sent to all address.
#
# This is not checked when the EMAIL_BACKEND is to console.
EMAIL_ALLOWED_LIST = ['.*@mozilla\.com$']

# The root URL for all CSS etc.
EMAIL_URL_ROOT = (os.environ.get('EMAIL_URL_ROOT') or
                  'http://192.168.59.103:8000')

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'payments_service.auth.SessionUserAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework.filters.DjangoFilterBackend',
    ),
    'PAGINATE_BY': 20,
    'PAGINATE_BY_PARAM': 'limit'
}

SYSLOG_TAG = 'http_app_payments_service'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'base': {
            '()': 'logging.Formatter',
            'format': '%(name)s:%(levelname)s '
                      '%(message)s :%(pathname)s:%(lineno)s'
        },
    },
    'handlers': {
        'unicodesyslog': {
            '()': 'mozilla_logger.log.UnicodeHandler',
            'facility': logging.handlers.SysLogHandler.LOG_LOCAL7,
            'formatter': 'base',
        },
        'sentry': {
            'level': 'ERROR',
            'class': 'raven.contrib.django.handlers.SentryHandler',
        },
        'console': {
            'level': 'DEBUG',
            '()': logging.StreamHandler,
            'formatter': 'base',
        },
    },
    'loggers': {
        '': {
            'handlers': ['console', 'unicodesyslog', 'sentry'],
            'level': 'INFO',
            'propagate': True,
        },
        'payments_service': {
            'level': 'DEBUG',
            'propagate': True,
        },
        'django.request': {
            'level': 'INFO',
            'propagate': True
        },
    }
}

TEST_RUNNER = 'django_nose.NoseTestSuiteRunner'

NOSE_ARGS = [
    '--logging-clear-handlers',
    '--with-nicedots',
    '--with-blockage',
    '--http-whitelist=""',
]

UNDER_TEST = os.environ.get('UNDER_TEST') == '1'

# URL to private payment processor. https://github.com/mozilla/solitude/
SOLITUDE_URL = os.environ.get('SOLITUDE_URL', 'http://solitude:2602')

# The oAuth key and secret that solitude needs.
SOLITUDE_KEY = 'payments-service'
SOLITUDE_SECRET = 'please change this'

# Firefox Accounts OAuth server to use.
# https://github.com/mozilla/fxa-oauth-server/
FXA_OAUTH_URL = 'https://oauth-stable.dev.lcip.org'

# Management app credentials tied to http://pay.dev:8000,
# just for development.
# https://oauth-stable.dev.lcip.org/console/client/8d7c6c8549cc6deb
FXA_CLIENT_ID = '8d7c6c8549cc6deb'
FXA_CLIENT_SECRET = (
    'b18c1a8d6797f00b88d5da1df57ae01c0c3cc2ed5309e8112bccae03d59e4286'
)

# When emailing buyers about their subscriptions, this
# will be the reply-to address. If a buyer replies to
# the email it will go to this address.
SUBSCRIPTION_REPLY_TO_EMAIL = 'payments-support@mozilla.com'

# When emailing buyers about their subscriptions, this
# will be the sender address. Bounces will be sent here.
SUBSCRIPTION_FROM_EMAIL = 'no-reply@mozilla.com'

MANAGEMENT_URL = 'http://pay.dev:8000/management.html'
